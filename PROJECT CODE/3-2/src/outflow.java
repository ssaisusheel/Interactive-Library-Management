
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chimmu123
 */
public class outflow extends javax.swing.JFrame {

    /**
     * Creates new form outflow
     */
    public outflow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        t1 = new com.toedter.calendar.JDateChooser();
        t2 = new com.toedter.calendar.JDateChooser();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        b2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        t3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ANALYSIS OF OUTFLOW OF BOOKS");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        l1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        l1.setText("Date Range From");

        l2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        l2.setText("To");

        b1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        b1.setText("OK");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(l1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(l2)
                        .addGap(34, 34, 34)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(t1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addComponent(t2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l2))
                .addGap(18, 18, 18)
                .addComponent(b1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("<HTML> <U>OUTFLOW OF BOOKS</U> </HTML>");

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tb1);

        b2.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        b2.setText("BAR-GRAPH");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        t3.setColumns(20);
        t3.setRows(5);
        jScrollPane2.setViewportView(t3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(b2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed

       // int days = Days.daysBetween(d1, d2).getDays();// TODO add your handling code here:
         java.sql.Date sqlDate ,sqlDate1;
        
         Connection connection = null; 
 
String driverName ="oracle.jdbc.driver.OracleDriver"; // for Oracle 
 
 
String serverName = "localhost"; 
String portNumber = "1521"; 
String sid = "home"; 
 
String url="jdbc:oracle:thin:@"+serverName+":"+ portNumber+":"+sid; 

 
String username = "chimmu"; 
String password = "chimmu123"; 
 
 
try { 

 Class.forName(driverName); 
 
 connection = DriverManager.getConnection(url, username, password); 
 
 } catch (ClassNotFoundException e) { 
  
 System.out.println("ClassNotFoundException : "+e.getMessage()); 
 
 } catch (SQLException e) { 

 System.out.println(e.getMessage()); 
 
 } 
try
{
     Statement stmt=null;
      stmt = connection.createStatement();
      System.out.println("rough n tough");
      Date d1,d2,d3;
      d1=  t1.getDate();
      System.out.println(d1);
      
      d2=t2.getDate();
        System.out.println(d2);
         if(d1==null ||d2==null)
         {
                System.out.println("hellor eyy!!");
             String q1 ="select sysdate from dual";
               ResultSet r = stmt.executeQuery(q1);
               r.next();
               sqlDate1=r.getDate(1);
                String q2 ="select (sysdate-30) from dual";
               ResultSet r2 = stmt.executeQuery(q2);
               r2.next();
               sqlDate=r2.getDate(1);
               
         }
         else
         {
          sqlDate = new java.sql.Date(d1.getTime());
         System.out.println("sqlDate:" + sqlDate.toString());
         sqlDate1 = new java.sql.Date(d2.getTime());
         System.out.println("sqlDate:" + sqlDate1.toString());
         }
      
      
      
      String query = "select bookid,bookname,ldate from outflow2 where ldate between (select to_date('"+sqlDate+"','YYYY-MM-DD') from dual) and (select to_date('"+sqlDate1+"','YYYY-MM-DD') from dual) ";
      ResultSet rs = stmt.executeQuery(query);
      
      // System.out.println(rs.next());
     /*   if(rs.next()==false)
      {
          t3.setText("SORRY NO TRANSACATION HAS TAKEN PLACE IN BETWEEN SELECTED DATES");
      }*/
      // System.out.println(rs.next());
       //System.out.println("rough");
      //System.out.println(""+rs.getInt(1));
      // System.out.println(rs.first());
    /*  while(rs.next())
      {
          //System.out.println(rs.first());
      System.out.println("rough");
       System.out.println(rs.getInt(1));
      }*/
    //   System.out.println("rough");
      //System.out.println(rs.next());
      tb1.setModel(DbUtils.resultSetToTableModel(rs));
       String query1 = "select bookid,bookname,ldate from outflow2 where ldate between (select to_date('"+sqlDate+"','YYYY-MM-DD') from dual) and (select to_date('"+sqlDate1+"','YYYY-MM-DD') from dual) ";
      ResultSet rs1 = stmt.executeQuery(query1);
       if(rs1.next()==false)
      {
           
          t3.setText("SORRY NO TRANSACATION HAS TAKEN PLACE IN BETWEEN SELECTED DATES");
      }
     /* while(rs.next()){
            System.out.println(rs.getString(2));
      }
      System.out.println(rs.getString(2));*/
      stmt.close();
}
catch(SQLException e){System.out.println(e);}        // TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed

       // int days = Days.daysBetween(d1, d2).getDays();// TODO add your handling code here:
         java.sql.Date sqlDate ,sqlDate1;
        
         Connection connection = null; 
 
String driverName ="oracle.jdbc.driver.OracleDriver"; // for Oracle 
 
 
String serverName = "localhost"; 
String portNumber = "1521"; 
String sid = "home"; 
 
String url="jdbc:oracle:thin:@"+serverName+":"+ portNumber+":"+sid; 

 
String username = "chimmu"; 
String password = "chimmu123"; 
 
 
try { 

 Class.forName(driverName); 
 
 connection = DriverManager.getConnection(url, username, password); 
 
 } catch (ClassNotFoundException e) { 
  
 System.out.println("ClassNotFoundException : "+e.getMessage()); 
 
 } catch (SQLException e) { 

 System.out.println(e.getMessage()); 
 
 } 
try
{
     Statement stmt=null;
      stmt = connection.createStatement();
         System.out.println("hhiiiii");
        Date d1,d2,d3,f;
      d1=  t1.getDate();
      System.out.println(d1);
      int y=0;
     // String f="";
      d2=t2.getDate();
        System.out.println(d2);
         if(d1==null ||d2==null)
         {
                System.out.println("hellor eyy!!");
             String q1 ="select sysdate from dual";
               ResultSet r = stmt.executeQuery(q1);
               r.next();
               sqlDate1=r.getDate(1);
                String q2 ="select (sysdate-30) from dual";
               ResultSet r2 = stmt.executeQuery(q2);
               r2.next();
               sqlDate=r2.getDate(1);
               
         }
         else
         {
          sqlDate = new java.sql.Date(d1.getTime());
         System.out.println("sqlDate:" + sqlDate.toString());
         sqlDate1 = new java.sql.Date(d2.getTime());
         System.out.println("sqlDate:" + sqlDate1.toString());
         }
        String query = "select count(bookid),ldate from outflow2\n" +
"group by ldate\n" +
"having ldate between ( select to_date('"+sqlDate+"','YYYY-MM-DD') from dual) and (select to_date('"+sqlDate1+"','YYYY-MM-DD') from dual)" ; 
     ResultSet rs = stmt.executeQuery(query);
     /* if(rs.next()==false)
      {
          t3.setText("SORRY NO TRANSACATION HAS TAKEN PLACE IN BETWEEN SELECTED DATES");
      }*/
     
      System.out.println("checkingg here");
        DefaultCategoryDataset dataset=new DefaultCategoryDataset();
        while(rs.next())
        {
             System.out.println("helloo");
            f=rs.getDate(2);
            y=rs.getInt(1);
            dataset.setValue(y,"no of buks",f);
        }
      /* dataset.setValue(78, "Marks", "s2");
       dataset.setValue(20, "Marks", "s3");*/
       //dataset.setValue(40, "Marks", "s4");
       JFreeChart chart= ChartFactory.createBarChart("OUTFLOW ANALYSIS","DATE","NO. OF BOOKS",dataset,PlotOrientation.VERTICAL,false,true,false);
       CategoryPlot p=chart.getCategoryPlot();
       p.setRangeGridlinePaint(Color.black);
       ChartFrame frame=new ChartFrame("bargraph",chart);
       frame.setVisible(true);
       frame.setSize(450,350);
         String query1 = "select count(bookid),ldate from outflow2\n" +
"group by ldate\n" +
"having ldate between ( select to_date('"+sqlDate+"','YYYY-MM-DD') from dual) and (select to_date('"+sqlDate1+"','YYYY-MM-DD') from dual)" ; 
     ResultSet rs1 = stmt.executeQuery(query1);
      if(rs1.next()==false)
      {
          t3.setText("SORRY NO TRANSACATION HAS TAKEN PLACE IN BETWEEN SELECTED DATES");
      }
}
catch(SQLException e){System.out.println(e);}        // TODO add your handling code here:
    }//GEN-LAST:event_b2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(outflow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(outflow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(outflow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(outflow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new outflow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private com.toedter.calendar.JDateChooser t1;
    private com.toedter.calendar.JDateChooser t2;
    private javax.swing.JTextArea t3;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
